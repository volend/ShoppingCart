/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Repositories.ProductRepository.Product;
import Store.BaseFilter;
import Store.Inventory;
import Store.ProductSize;
import Store.Store;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.Set;

/**
 *
 * @author Miguel Silva
 */
public class WelcomePage extends javax.swing.JFrame {

    /**
     * Creates new form WelcomePage
     */
    public WelcomePage() {

        super("Welcome to V&M Online Shop");
        initComponents();
        Initialize();
        //Set frame size and resizable
        setSize(900, 500);
        setResizable(true);
        //Place frame in the middle of screen
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        btnViewShoppingCart.setVisible(false);
        selectedProducts = null;
    }

    public void close() {

        WindowEvent winCLosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winCLosingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProducts = new javax.swing.JPanel();
        btnViewShoppingCart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        cmbSize = new javax.swing.JComboBox();
        cmbColor = new javax.swing.JComboBox();
        btnAddToCart = new javax.swing.JButton();
        lblSize = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lblAddViewErrorMessage = new javax.swing.JLabel();
        cbxAdminLogin = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlProducts.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Products"));

        btnViewShoppingCart.setText("VIEW SHOPPING CART");
        btnViewShoppingCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewShoppingCartActionPerformed(evt);
            }
        });

        tblProducts.setModel(new ProductDataTable(true));
        jScrollPane1.setViewportView(tblProducts);

        cmbSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSizeValueChanged(evt);
            }
        });

        cmbColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Blue", "Green", "Yellow" }));
        cmbColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbColorActionPerformed(evt);
            }
        });

        btnAddToCart.setText("ADD SELECTED ITEMS TO SHOPPING CART");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        lblSize.setText("Size:");

        lblColor.setText("Color:");

        lblSearch.setText("Search...");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchTextChanged(evt);
            }
        });

        lblAddViewErrorMessage.setBackground(new java.awt.Color(255, 255, 255));
        lblAddViewErrorMessage.setText("                ");
        lblAddViewErrorMessage.setEnabled(false);

        cbxAdminLogin.setText("Login as Administrator");
        cbxAdminLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAdminLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlProductsLayout = new javax.swing.GroupLayout(pnlProducts);
        pnlProducts.setLayout(pnlProductsLayout);
        pnlProductsLayout.setHorizontalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProductsLayout.createSequentialGroup()
                        .addComponent(cbxAdminLogin)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlProductsLayout.createSequentialGroup()
                        .addComponent(lblSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbSize, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addGroup(pnlProductsLayout.createSequentialGroup()
                        .addComponent(btnAddToCart)
                        .addGap(73, 73, 73)
                        .addComponent(lblAddViewErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnViewShoppingCart))))
        );

        pnlProductsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbColor, cmbSize});

        pnlProductsLayout.setVerticalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSize)
                    .addComponent(lblColor)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddToCart)
                    .addComponent(btnViewShoppingCart)
                    .addComponent(lblAddViewErrorMessage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(cbxAdminLogin))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Custom Code
    Set<ProductWrapper> selectedProducts;

    private void Initialize() {
        tblProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tblProducts.rowAtPoint(evt.getPoint());
                int col = tblProducts.columnAtPoint(evt.getPoint());
                if (row >= 0 && col >= 0) {
                }
            }
        });

        ProductDataTable productTable = (ProductDataTable) tblProducts.getModel();
        Inventory inventory = Store.getInstance().getInventory();
        for (Product product : inventory) {
            productTable.addProduct(new ProductWrapper(product));
        }

        cmbSize.addItem(ProductSize.All);
        cmbSize.addItem(ProductSize.Small);
        cmbSize.addItem(ProductSize.Medium);
        cmbSize.addItem(ProductSize.Large);
        cmbSize.addItem(ProductSize.ExtraLarge);
        shoppingCart.Initialize(this);

        cmbSize.setSelectedIndex(0);
        cmbColor.setSelectedIndex(0);
    }

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed

        ProductDataTable productTable = (ProductDataTable) tblProducts.getModel();
        selectedProducts = productTable.getSelectedProducts();

        if (selectedProducts.isEmpty()) {
            lblAddViewErrorMessage.setText("Please select items to add to shopping cart.");
        } else {
            lblAddViewErrorMessage.setText("");
            shoppingCart.addSelectedProducts(selectedProducts);
            selectedProducts = null;
            btnViewShoppingCart.setVisible(true);
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnViewShoppingCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewShoppingCartActionPerformed
        if (shoppingCart.haveItemsInShoppingCart()) {
            ProductDataTable productTable = (ProductDataTable) tblProducts.getModel();
            productTable.unselectAll();
            setVisible(false);
            shoppingCart.setVisible(true);
        } else {
            lblAddViewErrorMessage.setVisible(true);
        }
    }//GEN-LAST:event_btnViewShoppingCartActionPerformed

    private void cbxAdminLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAdminLoginActionPerformed
        close();
        Administrator a = new Administrator();
        a.setVisible(true);
    }//GEN-LAST:event_cbxAdminLoginActionPerformed

    private void cmbSizeValueChanged(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSizeValueChanged
        // TODO add your handling code here:
        updateFilters();
    }//GEN-LAST:event_cmbSizeValueChanged

    private void cmbColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbColorActionPerformed
        // TODO add your handling code here:
        updateFilters();
    }//GEN-LAST:event_cmbColorActionPerformed

    private void txtSearchTextChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchTextChanged
        // TODO add your handling code here:
        updateFilters();
    }//GEN-LAST:event_txtSearchTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WelcomePage().setVisible(true);


            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnViewShoppingCart;
    private javax.swing.JCheckBox cbxAdminLogin;
    private javax.swing.JComboBox cmbColor;
    private javax.swing.JComboBox cmbSize;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddViewErrorMessage;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSize;
    private javax.swing.JPanel pnlProducts;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    ShoppingCart shoppingCart = new ShoppingCart();

    private void updateFilters() {
        ProductSize selection = (ProductSize) cmbSize.getSelectedItem();
        Inventory inventory = Store.getInstance().getInventory();
        for (BaseFilter filter : inventory.getFilters()) {
            inventory.removeFilter(filter);
        }

        if (selection != ProductSize.All) {
            inventory.addFilter(BaseFilter.createSizeFilter(selection));
        }

        String color = (String) cmbColor.getSelectedItem();
        if (!color.equals("All")) {
            inventory.addFilter(BaseFilter.createColorFilter(color));
        }

        if (!"".equals(txtSearch.getText())) {
            inventory.addFilter(BaseFilter.CreateQueryFilter(txtSearch.getText()));
        }

        ProductDataTable productTable = (ProductDataTable) tblProducts.getModel();
        productTable.clearItems();
        productTable.BeginUpdate();
        for (Product product : inventory) {
            productTable.addProduct(new ProductWrapper(product));
        }
        productTable.EndUpdate();
    }
}