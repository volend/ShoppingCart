/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Repositories.ProductRepository.ProductInfo;
import Repositories.ProductRepository.ProductRepository;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.MouseAdapter;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;


/**
 *
 * @author Miguel Silva
 */
public class WelcomePage extends javax.swing.JFrame {

    /**
     * Creates new form WelcomePage
     */
    public WelcomePage() {  
        
        super("Welcome to V&M Online Shop");
        initComponents();
        Events();
        //Set frame size and resizable
        setSize(900, 500);
        setResizable(true);
        //Place frame in the middle of screen
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        btnViewShoppingCart.setVisible(false);
    }

    public void close(){

        WindowEvent winCLosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winCLosingEvent);
        
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProducts = new javax.swing.JPanel();
        btnViewShoppingCart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        cmbSize = new javax.swing.JComboBox();
        cmbColor = new javax.swing.JComboBox();
        btnAddToCart = new javax.swing.JButton();
        lblSize = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lblAddViewErrorMessage = new javax.swing.JLabel();
        cbxAdminLogin = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlProducts.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Products"));

        btnViewShoppingCart.setText("VIEW SHOPPING CART");
        btnViewShoppingCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewShoppingCartActionPerformed(evt);
            }
        });

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SELECT ITEMS", "DESCRIPTION", "SIZE", "COLOR", "QUANTITY", "PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProducts);

        cmbSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Small", "Medium", "Large", "XLarge" }));

        cmbColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Orange", "Blue", "Purple", "White" }));

        btnAddToCart.setText("ADD SELECTED ITEMS TO SHOPPING CART");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        lblSize.setText("Size:");

        lblColor.setText("Color:");

        lblSearch.setText("Search...");

        lblAddViewErrorMessage.setBackground(new java.awt.Color(255, 255, 255));
        lblAddViewErrorMessage.setText("                ");
        lblAddViewErrorMessage.setEnabled(false);

        cbxAdminLogin.setText("Login as Administrator");
        cbxAdminLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAdminLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlProductsLayout = new javax.swing.GroupLayout(pnlProducts);
        pnlProducts.setLayout(pnlProductsLayout);
        pnlProductsLayout.setHorizontalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProductsLayout.createSequentialGroup()
                        .addComponent(cbxAdminLogin)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlProductsLayout.createSequentialGroup()
                        .addComponent(lblSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbSize, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addGroup(pnlProductsLayout.createSequentialGroup()
                        .addComponent(btnAddToCart)
                        .addGap(73, 73, 73)
                        .addComponent(lblAddViewErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnViewShoppingCart))))
        );

        pnlProductsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbColor, cmbSize});

        pnlProductsLayout.setVerticalGroup(
            pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductsLayout.createSequentialGroup()
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSize)
                    .addComponent(lblColor)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddToCart)
                    .addComponent(btnViewShoppingCart)
                    .addComponent(lblAddViewErrorMessage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(cbxAdminLogin))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Custom Code
    private void Events()
    {
                
        tblProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tblProducts.rowAtPoint(evt.getPoint());
                int col = tblProducts.columnAtPoint(evt.getPoint());
                if (row >= 0 && col >= 0) {

                }
            }
        });
        
        
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            getProducts(),
            new String [] {
                "SELECT ITEMS", "DESCRIPTION", "SIZE", "COLOR", "QUANTITY", "PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        /*TableColumn qtyColumn = jTable1.getColumnModel().getColumn(4);
        JComboBox comboBox = new JComboBox();
        comboBox.addItem("1");
        comboBox.addItem("2");
        comboBox.addItem("3");
        comboBox.addItem("4");
        comboBox.addItem("5");
        comboBox.addItem("6");
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        qtyColumn.setCellEditor(new DefaultCellEditor(comboBox));
        qtyColumn.setCellRenderer(renderer);*/
        
    }
    
    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        
        DefaultTableModel dtm = (DefaultTableModel) tblProducts.getModel();
        
        int nRow = dtm.getRowCount();        
        int noProducts = 0;

        for (int i = 0 ; i < nRow ; i++) {  
                                   
            if ((Boolean)dtm.getValueAt(i, 0) == true) {
                noProducts++;
            }     
        }
        
        selectedProducts = new String[noProducts][2];
        noProducts = 0;
        for (int i = 0 ; i < nRow ; i++)            
        {
            if ((Boolean)dtm.getValueAt(i, 0) == true)
            {

                /*JComboBox combo = (JComboBox) jTable1.getCellEditor(i, 4);
                Object selectedItem = combo.getSelectedItem();*/
                               
                selectedProducts[noProducts][0] = (String)dtm.getValueAt(i, 4);
                selectedProducts[noProducts][1] = Integer.toString((Integer)products[i][6]);
                noProducts++;
            }
            if (noProducts == 0){
                lblAddViewErrorMessage.setText("Please select items to add to shopping cart.");
            }else{
                lblAddViewErrorMessage.setText("");
                btnViewShoppingCart.setVisible(true);
        }
        }
        

        /*
        for (int i = 0 ; i < noProducts ; i++)            
        {
            System.out.println(" ID " + selectedProducts[i][1] + " - Qty " +  selectedProducts[i][0]);           
            
        } 
         
         */
                 
        
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnViewShoppingCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewShoppingCartActionPerformed
        if (selectedProducts != null) {        
            p.setselectedProducts(selectedProducts);
            p.Events();
            close();
            p.setVisible(true);
        }   else {
            lblAddViewErrorMessage.setVisible(true);
            
        }     

    }//GEN-LAST:event_btnViewShoppingCartActionPerformed

    private void cbxAdminLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAdminLoginActionPerformed
            close();
            Administrator a = new Administrator();
            a.setVisible(true);
    }//GEN-LAST:event_cbxAdminLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WelcomePage().setVisible(true);
         

            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnViewShoppingCart;
    private javax.swing.JCheckBox cbxAdminLogin;
    private javax.swing.JComboBox cmbColor;
    private javax.swing.JComboBox cmbSize;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddViewErrorMessage;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSize;
    private javax.swing.JPanel pnlProducts;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    
    ShoppingCart p = new ShoppingCart();
    
    private Object [][] products;
    /* = new Object [][] {        
        {new Boolean(false), "Beach T-Shirt", "L", "Purple", "1", new Double(10.5), 1},
        {new Boolean(false),"Beach T-Shirt", "L", "Blue", "1", new Double(11.5), 2},
        {new Boolean(false),"Beach T-Shirt", "L", "White", "1", new Double(12.5), 3},
        {new Boolean(false),"Beach T-Shirt", "XL", "Purple", "1", new Double(13.5), 4},
        {new Boolean(false),"Beach T-Shirt", "XL", "Blue", "1", new Double(11.5), 5},
        {new Boolean(false),"Beach T-Shirt", "XL", "White", "1", new Double(12.5), 6},
        {new Boolean(false),"T-Shirt", "L", "Purple", "1", new Double(10.5), 7},
        {new Boolean(false),"T-Shirt", "L", "Blue", "1", new Double(11.5), 8},
        {new Boolean(false),"T-Shirt", "L", "White", "1", new Double(12.5), 9},
        {new Boolean(false),"T-Shirt", "XL", "Purple", "1", new Double(13.5), 10},
        {new Boolean(false),"T-Shirt", "XL", "Blue", "1", new Double(11.5), 11},
        {new Boolean(false),"T-Shirt", "XL", "White", "1", new Double(12.5), 12}                
    };*/
    
    
    
    
    private String [][] selectedProducts;
    
    private Object[][] getProducts(){    
        ProductRepository pr = new ProductRepository();
        HashMap<String, ProductInfo> map = pr.getProductList();  
        Set set = map.entrySet();       
        Iterator iter = set.iterator();
                
        products = new Object [map.size()][7];
        int i  = 0;
        while (iter.hasNext()) {
            Map.Entry entry = (Map.Entry) iter.next();
            Repositories.ProductRepository.ProductInfo pi = ((Repositories.ProductRepository.ProductInfo)entry.getValue());                     
            products[i][0] = new Boolean(false);
            products[i][1] = pi.getProduct().getTitle();            
            products[i][2] = pi.getProduct().getSize().toString();
            products[i][3] = pi.getProduct().getColor().toString();
            products[i][4] = "1";
            products[i][5] = pi.getProduct().getSalePrice();                    
            products[i][6] = i+1;            
            i++;           
        }
        
        return products;
    }
    
   
}